#include <stdio.h>
#include <stdlib.h>

typedef struct Pbm Pbm;
struct Pbm
{
    int l;
    int h;

    char image[10][10];
};

typedef struct cielPBM cielPBM;
struct cielPBM
{
    int L;
    int H;
};

typedef struct destination destination;
struct destination
{
    char avion[10][10];
    char nuage[10][10];
};

typedef struct source source;
struct source
{
    char ciel[10][10];
};


Pbm *chargerPBM(char *nomFichierPBM)
{
    cielPBM type;
    FILE* fichier = NULL;
    Pbm *pbm = malloc(sizeof(Pbm));
    fichier = fopen(nomFichierPBM, "r");

    if(fichier != NULL)
    {
        lireResolution(fichier, pbm);
        int i, j;
        for (i = 0; i < pbm ->type.l; i++)
        {
            for (j = 0; j < pbm ->type.h; j++)
            {
                fscanf(fichier, "%d", &pbm->image[i][j]);
            }
        }
        fclose(fichier);
    }
}

void positionPBMxy(destination, source, int x, int y)
{
    for(i=0 ; i<Pbm.l ; i++)
    {
        for(j=0 ; i<Pbm.h ; j++)
        {
            ciel[%cielPBM.L][%cielPBM.H] = avion[i][j]; // ciel avion (non declaré)
        }
    }
}

void afficherCiel()
{
    for(i=0 ; i<cielPBM.L ; i++)
    {
        for(j=0 ; i<cielPBM.H ; j++)
        {
            printf("-") // Ciel(non declaré)
        }
    }
}

void viderCiel()
{
    for(i=0 ; i<cielPBM.L ; i++)
    {
        for(j=0 ; i<cielPBM.H ; j++)
        {
            printf(" ");
            positionPBMxy(destination.ciel, source.nuage, 2, 2)     //postion nuage a modif
        }
    }
}
void touche()
{
    toucheDirectionelle = getch();
    toucheDirectionelle = getch();
    toucheDirectionelle = getch();

        switch (touche_directionnelle)
            {
                case 65:
                    point.y --;
                    break;

                case 66:
                    point.y ++;
                    break;

                case 67:
                    point.x ++;
                    break;

                case 68:
                    point.x --;
                    break;
        }



int main()
{
    printf("Hello world!\n");
    return 0;
}
